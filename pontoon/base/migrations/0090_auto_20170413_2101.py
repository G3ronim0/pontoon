# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-04-13 21:01
from __future__ import unicode_literals

from bulk_update.helper import bulk_update
from django.db import migrations, models

"""
We decided to move dynamic mapping of locales into a static map which will be stored in the database.
Locales that can't be mapped between Pontoon and Microsoft Translator/Terminology, won't be able to use
those products.
"""
TRANSLATOR_LOCALES = {
    u'ar': u'ar',
    u'bg': u'bg',
    u'bs-Latn': u'bs',
    u'ca': u'ca',
    u'cs': u'cs',
    u'cy': u'cy',
    u'da': u'da',
    u'de': u'de',
    u'el': u'el',
    u'en': u'en-GB',
    u'es': u'es',
    u'et': u'et',
    u'fa': u'fa',
    u'fi': u'fi',
    u'fr': u'fr',
    u'he': u'he',
    u'hi': u'hi-IN',
    u'hr': u'hr',
    u'ht': u'ht',
    u'hu': u'hu',
    u'id': u'id',
    u'it': u'it',
    u'ja': u'ja',
    u'ko': u'ko',
    u'lt': u'lt',
    u'lv': u'lv',
    u'ms': u'ms',
    u'mt': u'',
    u'mww': u'',
    u'nl': u'nl',
    u'no': u'',
    u'otq': u'',
    u'pl': u'pl',
    u'pt': u'pt-PT',
    u'ro': u'ro',
    u'ru': u'ru',
    u'sk': u'sk',
    u'sl': u'sl',
    u'sr-Cyrl': u'sr',
    u'sr-Latn': u'',  # https://github.com/mozilla/pontoon/pull/535#discussion_r111643574
    u'sv': u'sv-SE',
    u'th': u'th',
    u'tlh': u'',
    u'tlh-Qaak': u'',
    u'tr': u'tr',
    u'uk': u'uk',
    u'ur': u'ur',
    u'vi': u'vi',
    u'yua': u'',
    u'zh-CHS': u'zh-CN',
    u'zh-CHT': u'' # https://github.com/mozilla/pontoon/pull/535#discussion_r111643503
}

TERMINOLOGY_LOCALES = {
    u'af-za': u'af',
    u'am-et': u'am',
    u'ar-sa': u'ar',
    u'as-in': u'as',
    u'be-by': u'be',
    u'bg-bg': u'bg',
    u'ca-es': u'ca',
    u'cs-cz': u'cs',
    u'cy-gb': u'cy',
    u'da-dk': u'da',
    u'de-de': u'de',
    u'el-gr': u'el',
    u'et-ee': u'et',
    u'eu-es': u'eu',
    u'fa-ir': u'fa',
    u'fi-fi': u'fi',
    u'fr-fr': u'fr',
    u'ga-ie': u'ga-IE',
    u'gl-es': u'gl',
    u'gu-in': u'gu-IN',
    u'ha-Latn-ng': u'ha',
    u'he-il': u'he',
    u'hi-in': u'hi-IN',
    u'hr-hr': u'hr',
    u'hu-hu': u'hu',
    u'hy-am': u'hy-AM',
    u'id-id': u'id',
    u'ig-ng': u'ig',
    u'is-is': u'is',
    u'it-it': u'it',
    u'ja-jp': u'ja',
    u'ka-ge': u'ka',
    u'kk-kz': u'kk',
    u'km-kh': u'km',
    u'kn-in': u'kn',
    u'ko-kr': u'ko',
    u'lo-la': u'lo',
    u'lt-lt': u'lt',
    u'lv-lv': u'lv',
    u'ml-in': u'ml',
    u'mr-in': u'mr',
    u'ne-np': u'ne-NP',
    u'nl-nl': u'nl',
    u'pa-in': u'pa-IN',
    u'pl-pl': u'pl',
    u'ro-ro': u'ro',
    u'ru-ru': u'ru',
    u'si-lk': u'si',
    u'sk-sk': u'sk',
    u'sl-si': u'sl',
    u'sq-al': u'sq',
    u'sv-se': u'sv-SE',
    u'te-in': u'te',
    u'th-th': u'th',
    u'tr-tr': u'tr',
    u'uk-ua': u'uk',
    u'ur-pk': u'ur',
    u'vi-vn': u'vi',
    u'wo-sn': u'wo',
    u'yo-ng': u'yo',

    # Locales that couldn't be directly mapped to the pontoon.
    u'az-Latn-az': u'az',
    u'bn-bd': u'bn-BD',
    u'bn-in': u'bn-IN',
    u'bs-Cyrl-ba': u'',  # https://github.com/mozilla/pontoon/pull/535#discussion_r111643696
    u'bs-Latn-ba': u'bs',
    u'ca-ES-valencia': u'ca',
    u'chr-Cher-US': u'',
    u'en-gb': u'en-GB',
    u'es-es': u'es-ES',
    u'es-mx': u'es-MX',
    u'fr-ca': u'fr',
    u'gd-gb': u'gd',
    u'guc-VE': u'',
    u'iu-Latn-ca': u'',
    u'kok-in': u'',
    u'ku-Arab-IQ': u'ku',
    u'ky-kg': u'',
    u'lb-lu': u'',
    u'mi-nz': u'',
    u'mk-mk': u'mk',
    u'mn-mn': u'mn',
    u'ms-bn': u'ms',
    u'ms-my': u'ms',
    u'mt-mt': u'',
    u'nb-no': u'nb-NO',
    u'nn-no': u'nn-NO',
    u'nso-za': u'nso',
    u'or-in': u'or',
    u'pa-Arab-PK': u'',
    u'prs-AF': u'',
    u'ps-af': u'',
    u'pt-br': u'pt-BR',
    u'pt-pt': u'pt-PT',
    u'quc-Latn-GT': u'',
    u'quz-pe': u'',
    u'rw-rw': u'',
    u'sd-Arab-PK': u'',
    u'sr-Cyrl-ba': u'',  # https://github.com/mozilla/pontoon/pull/535#discussion_r111643879
    u'sr-Cyrl-rs': u'sr',
    u'sr-Latn-rs': u'',  # https://github.com/mozilla/pontoon/pull/535#discussion_r111643879
    u'sw-ke': u'sw',
    u'ta-in': u'ta',
    u'tg-Cyrl-tj': u'tg',
    u'ti-et': u'',
    u'tk-tm': u'',
    u'tl-PH': u'tl',
    u'tn-za': u'',
    u'tt-ru': u'',
    u'ug-cn': u'',
    u'uz-Latn-uz': u'uz',
    u'xh-za': u'xh',
    u'zh-cn': u'zh-CN',
    u'zh-hk': u'zh-HK',
    u'zh-tw': u'zh-TW',
    u'zu-za': u'zu'
}


def migrate_locales(apps, schema_editor):
    """
    Add alternative locale codes for our integrations with Microsoft products.
    """
    Locale = apps.get_model('base', 'Locale')
    locale_map = {l.code:l for l in Locale.objects.all()}

    for ms_code, pontoon_code in filter(lambda x: x[1], TRANSLATOR_LOCALES.items()):
        if pontoon_code in locale_map:
            locale_map[pontoon_code].ms_translator_code = ms_code

    for ms_code, pontoon_code in filter(lambda x: x[1], TERMINOLOGY_LOCALES.items()):
        if pontoon_code in locale_map:
            locale_map[pontoon_code].ms_terminology_code = ms_code

    bulk_update(locale_map.values(), update_fields=['ms_translator_code', 'ms_terminology_code'])


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0089_create_project_manager_group'),
    ]

    operations = [
        migrations.AddField(
            model_name='locale',
            name='ms_terminology_code',
            field=models.CharField(blank=True, help_text=b'\n        Microsoft Terminology uses locale codes standarized by ISO-639. Add a code of compliant locale or leave blank to disable\n        support for Microsoft terminology.\n        ', max_length=20),
        ),
        migrations.AddField(
            model_name='locale',
            name='ms_translator_code',
            field=models.CharField(blank=True, help_text=b'\n        Microsoft Translator maintains its own list of <a href="https://msdn.microsoft.com/en-us/library/hh456380.aspx">supported locales</a>.\n        Choose a locale from that list that\'s is the closest match or leave it blank to disable support for this feature.\n        ', max_length=20),
        ),
        migrations.RunPython(
            migrate_locales,
            migrations.RunPython.noop,
        )
    ]
